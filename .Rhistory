source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
stata.output <- function() {
lst <- ls(globalenv())              #list global env
stata.output <- file.path(getwd(), "stata.output.txt")
file.create(stata.output)
# --------------------------------------------------------------------------
# PREPARING CLASSES
# ==========================================================================
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
integer <- lst[sapply(lst,function(var) any(class(get(var))=='integer'))]
numeric <- paste(numeric, integer)
matrix <- lst[sapply(lst,function(var) any(class(get(var))=='matrix'))]
#print(numeric)
# --------------------------------------------------------------------------
# PREPARE OUTPUT EXPORTATION
# ==========================================================================
# NUMERIC OUTPUTS
# ====================================
print(numeric)
for (i in numeric) {
iget <- get(i)
if (length(iget) == 1) {
content <- paste("//SCALAR", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
if (length(iget) > 1) {
content <- paste("//NUMERICLIST", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
}
}
stata.output()
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
string <- 'this is a string'
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
lst[sapply(lst,function(var) any(class(get(var))=='string'))]
lst[sapply(lst,function(var) any(class(get(var))=='character'))]
lst[sapply(lst,function(var) any(class(get(var))=='char'))]
lst <- ls(globalenv())
lst[sapply(lst,function(var) any(class(get(var))=='string'))]
lst[sapply(lst,function(var) any(class(get(var))=='character'))]
lst[sapply(lst,function(var) any(class(get(var))=='char'))]
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
string
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
string
class(char)
class(string)
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
# --------------------------------------------------------------------------
# PREPARATION
# ==========================================================================
lst <- ls(globalenv())              #list global env
stata.output <- file.path(getwd(), "stata.output.txt")
file.create(stata.output)
matrix <- lst[sapply(lst,function(var) any(class(get(var))=='matrix'))]
# --------------------------------------------------------------------------
# PREPARE OUTPUT EXPORTATION
# ==========================================================================
# NUMERIC (numeric AND integer)
# ------------------------------------
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
integer <- lst[sapply(lst,function(var) any(class(get(var))=='integer'))]
numeric <- c(numeric, integer)
for (i in numeric) {
iget <- get(i)
if (length(iget) == 1) {
content <- paste("//SCALAR", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
if (length(iget) > 1) {
content <- paste("//NUMERICLIST", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
}
# STRING
# ------------------------------------
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
string
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
# --------------------------------------------------------------------------
# PREPARATION
# ==========================================================================
lst <- ls(globalenv())              #list global env
stata.output <- file.path(getwd(), "stata.output.txt")
file.create(stata.output)
matrix <- lst[sapply(lst,function(var) any(class(get(var))=='matrix'))]
# --------------------------------------------------------------------------
# PREPARE OUTPUT EXPORTATION
# ==========================================================================
# NUMERIC (numeric AND integer)
# ------------------------------------
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
integer <- lst[sapply(lst,function(var) any(class(get(var))=='integer'))]
numeric <- c(numeric, integer)
for (i in numeric) {
iget <- get(i)
if (length(iget) == 1) {
content <- paste("//SCALAR", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
if (length(iget) > 1) {
content <- paste("//NUMERICLIST", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
}
# STRING
# ------------------------------------
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
lst[sapply(lst,function(var) any(class(get(var))=='character'))]
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
# --------------------------------------------------------------------------
# PREPARATION
# ==========================================================================
lst <- ls(globalenv())              #list global env
stata.output <- file.path(getwd(), "stata.output.txt")
file.create(stata.output)
matrix <- lst[sapply(lst,function(var) any(class(get(var))=='matrix'))]
# --------------------------------------------------------------------------
# PREPARE OUTPUT EXPORTATION
# ==========================================================================
# NUMERIC (numeric AND integer)
# ------------------------------------
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
integer <- lst[sapply(lst,function(var) any(class(get(var))=='integer'))]
numeric <- c(numeric, integer)
for (i in numeric) {
iget <- get(i)
if (length(iget) == 1) {
content <- paste("//SCALAR", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
if (length(iget) > 1) {
content <- paste("//NUMERICLIST", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
}
# STRING
# ------------------------------------
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
lst <- ls(globalenv())
lst
rm(list=ls())
a <- 10
b <- c(1,2,3,4,5)
b2 <- c(5:10)
c = matrix(
c(2, 4, 3, 1, 5, 7), # the data elements
nrow=2,              # number of rows
ncol=3,              # number of columns
byrow = TRUE)
mystr <- 'this is a string'
char <- "this is just another string text that by chance can also be very long si ch sdasdkj askdj asd
asdjis dakljd aksdj alskdj lkgje rg
sifjs disj p
sdflj"
lst <- ls(globalenv())
lst
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
# --------------------------------------------------------------------------
# PREPARATION
# ==========================================================================
lst <- ls(globalenv())              #list global env
# NUMERIC (numeric AND integer)
# ------------------------------------
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
integer <- lst[sapply(lst,function(var) any(class(get(var))=='integer'))]
numeric <- c(numeric, integer)
# STRING
# ------------------------------------
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
# MATRIX
# ------------------------------------
matrix <- lst[sapply(lst,function(var) any(class(get(var))=='matrix'))]
# --------------------------------------------------------------------------
# PREPARE OUTPUT EXPORTATION
# ==========================================================================
stata.output <- file.path(getwd(), "stata.output.txt")
file.create(stata.output)
# NUMERIC (numeric AND integer)
# ------------------------------------
for (i in numeric) {
iget <- get(i)
if (length(iget) == 1) {
content <- paste("//SCALAR", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
if (length(iget) > 1) {
content <- paste("//NUMERICLIST", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
}
# STRING
# ------------------------------------
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
?class
a <- as.double(23)
lst <- ls(globalenv())
lst
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
numeric
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
integer <- lst[sapply(lst,function(var) any(class(get(var))=='integer'))]
numeric <- c(numeric, integer)
numeric
double <- as.double(23.434)
class(double)
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
class(log)
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
logical <- lst[sapply(lst,function(var) any(class(get(var))=='logical'))]
lst <- ls(globalenv())
logical <- lst[sapply(lst,function(var) any(class(get(var))=='logical'))]
logical
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
numeric <- c(numeric, integer, logical)
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
x <- as.complex(23)
class(x)
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
raw <- as.raw(0)
raw
lst <- ls(globalenv())              #list global env
# NUMERIC (numeric AND integer)
# ------------------------------------
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
numeric
class(raw)
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
lst <- ls(globalenv())              #list global env
# NUMERIC (numeric AND integer)
# ------------------------------------
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
integer <- lst[sapply(lst,function(var) any(class(get(var))=='integer'))]
raw <- lst[sapply(lst,function(var) any(class(get(var))=='raw'))]
numeric <- c(numeric, integer, raw)
numeric
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
raw <- lst[sapply(lst,function(var) any(class(get(var))=='raw'))]
lst <- ls(globalenv())
raw <- lst[sapply(lst,function(var) any(class(get(var))=='raw'))]
raw
raw <- as.raw(0)
raw <- lst[sapply(lst,function(var) any(class(get(var))=='raw'))]
raw
raw <- as.raw(0)
raw
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
raw2 <- as.raw(10)
raw2
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
stata.output <- function() {
# --------------------------------------------------------------------------
# PREPARATION
# ==========================================================================
lst <- ls(globalenv())              #list global env
# NUMERIC (numeric AND integer)
# ------------------------------------
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
integer <- lst[sapply(lst,function(var) any(class(get(var))=='integer'))]
numeric <- c(numeric, integer)
# STRING (character AND logical AND complex)
# ------------------------------------
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
logical <- lst[sapply(lst,function(var) any(class(get(var))=='logical'))]
complex <- lst[sapply(lst,function(var) any(class(get(var))=='complex'))]
raw <- lst[sapply(lst,function(var) any(class(get(var))=='raw'))]
string <- c(string, logical, complex, raw)
# MATRIX
# ------------------------------------
#matrix <- lst[sapply(lst,function(var) any(class(get(var))=='matrix'))]
# --------------------------------------------------------------------------
# PREPARE OUTPUT EXPORTATION
# ==========================================================================
stata.output <- file.path(getwd(), "stata.output.txt")
file.create(stata.output)
# NUMERIC (numeric AND integer)
# ------------------------------------
for (i in numeric) {
iget <- get(i)
if (length(iget) == 1) {
content <- paste("//SCALAR", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
if (length(iget) > 1) {
content <- paste("//NUMERICLIST", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
}
# STRING
# ------------------------------------
for (i in string) {
iget <- get(i)
content <- paste("//STRING", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
}
stata.output()
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
null.object <- NULL
class(null.object)
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
lst <- ls(globalenv())              #list global env
null <- lst[sapply(lst,function(var) any(class(get(var))=='NULL'))]
null
string <- c(string, logical, complex, RAW, null)
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
logical <- lst[sapply(lst,function(var) any(class(get(var))=='logical'))]
complex <- lst[sapply(lst,function(var) any(class(get(var))=='complex'))]
RAW <- lst[sapply(lst,function(var) any(class(get(var))=='raw'))]
null <- lst[sapply(lst,function(var) any(class(get(var))=='NULL'))]
string <- c(string, logical, complex, RAW, null)
string
get(null.object)
null.object
get(null.object)
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
stata.output()
#source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
stata.output <- function() {
# --------------------------------------------------------------------------
# PREPARATION
# ==========================================================================
lst <- ls(globalenv())              #list global env
# NUMERIC (numeric AND integer)
# ------------------------------------
numeric <- lst[sapply(lst,function(var) any(class(get(var))=='numeric'))]
integer <- lst[sapply(lst,function(var) any(class(get(var))=='integer'))]
numeric <- c(numeric, integer)
# STRING (character AND logical AND complex)
# ------------------------------------
string <- lst[sapply(lst,function(var) any(class(get(var))=='character'))]
logical <- lst[sapply(lst,function(var) any(class(get(var))=='logical'))]
complex <- lst[sapply(lst,function(var) any(class(get(var))=='complex'))]
RAW <- lst[sapply(lst,function(var) any(class(get(var))=='raw'))]
null <- lst[sapply(lst,function(var) any(class(get(var))=='NULL'))]
string <- c(string, logical, complex, RAW, null)
# MATRIX
# ------------------------------------
#matrix <- lst[sapply(lst,function(var) any(class(get(var))=='matrix'))]
# --------------------------------------------------------------------------
# PREPARE OUTPUT EXPORTATION
# ==========================================================================
stata.output <- file.path(getwd(), "stata.output.txt")
file.create(stata.output)
# NUMERIC (numeric AND integer)
# ------------------------------------
for (i in numeric) {
iget <- get(i)
if (length(iget) == 1) {
content <- paste("//SCALAR", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
if (length(iget) > 1) {
content <- paste("//NUMERICLIST", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
}
# STRING
# ------------------------------------
for (i in string) {
iget <- get(i)
content <- paste("//STRING", i)
write(content, file=stata.output, append=TRUE)
write(iget, file=stata.output, append=TRUE)
}
}
stata.output()
stata.output()
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
rm(list=ls())
#source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
#setwd("~/Dropbox/STATA/MY PROGRAMS/rdo")
double <- as.double(23.434)
log <- as.logical(FALSE)
correct <- as.logical(T)
raw.object <- as.raw(0)
null.object <- NULL
complex.obj <- as.complex(-1)
a <- 10
b <- c(1,2,3,4,5)
b2 <- c(5:10)
c = matrix(
c(2, 4, 3, 1, 5, 7), # the data elements
nrow=2,              # number of rows
ncol=3,              # number of columns
byrow = TRUE)
mystr <- 'this is a string'
char <- "LINE 1 just another string text that by chance can also be very long
LINE 2 dakljd aksdj alskdj lkgje rg
LINE 3 disj p
LINE 4"
print(a)
print(b)
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/get.R')
source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
rm(list=ls())
#source('~/Dropbox/STATA/MY PROGRAMS/rdo/stata.output.R')
#setwd("~/Dropbox/STATA/MY PROGRAMS/rdo")
double <- as.double(23.434)
log <- as.logical(FALSE)
correct <- as.logical(T)
raw.object <- as.raw(0)
null.object <- NULL
complex.obj <- as.complex(-1)
a <- 10
b <- c(1,2,3,4,5)
b2 <- c(5:10)
c = matrix(
c(2, 4, 3, 1, 5, 7), # the data elements
nrow=2,              # number of rows
ncol=3,              # number of columns
byrow = TRUE)
mystr <- 'this is a string'
char <- "LINE 1 just another string text that by chance can also be very long
LINE 2 dakljd aksdj alskdj lkgje rg
LINE 3 disj p
LINE 4"
ls()
print(a)
print(b)
rm(stata.output)
